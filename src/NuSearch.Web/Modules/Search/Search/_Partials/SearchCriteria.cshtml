@using NuSearch.Web.Modules.Search
@using NuSearch.Web.Modules.Search.Search
@model NuSearch.Web.Modules.Search.Search.SearchViewModel
@{ 
	var sort = Model.Form.Sort;
	var pageSize = Model.Form.PageSize;
}
@Html.Partial("Pager", Model)
<h3>
	<span class="text-muted">
		Displaying
		<select name="pagesize" class="label label-select">
			<option @(pageSize == 10 ? "selected" : "")>10</option>
			<option @(pageSize == 25 ? "selected" : "")>25</option>
			<option @(pageSize == 50 ? "selected" : "")>50</option>
			<option @(pageSize == 100 ? "selected" : "")>100</option>
		</select>
		packages per page,
	</span>
	<span class="text-muted">
		ordered by
		<select name="sort" class="label label-select">
			<option value="relevance" @(sort == SearchSort.Relevance ? "selected" : "")>Relevance</option>
			<option value="downloads" @(sort == SearchSort.Downloads ? "selected" : "")>Downloads</option>
			<option value="recent" @(sort == SearchSort.Recent ? "selected" : "")>Age</option>
		</select>
	</span>
</h3>
<h2>
<span class="text-success">Found <span class="label label-success">@Model.Total</span> packages</span>
@if (!string.IsNullOrEmpty(Model.Form.Query))
{
	<span class="text-primary">
		searching for
		<span class="label label-primary">"@Model.Form.Query" <a class="glyphicon glyphicon-remove" href="@Model.UrlForFirstPage(f=> { f.Query = null; })"></a></span>
	</span>
}
@if (!string.IsNullOrEmpty(Model.Form.Author))
{
	<span class="text-warning">
		having an <span class="label label-info">Author</span> named
		<a class="label label-warning" href="@Model.UrlForFirstPage(f => { f.Author = null; })">@Model.Form.Author <span class="glyphicon glyphicon-remove"></span></a>
	</span>
}
</h2>
